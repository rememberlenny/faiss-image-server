# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: faissimageindex.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='faissimageindex.proto',
  package='faiss',
  syntax='proto3',
  serialized_pb=_b('\n\x15\x66\x61issimageindex.proto\x12\x05\x66\x61iss\"<\n\nAddRequest\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0b\n\x03url\x18\x02 \x01(\t\x12\x15\n\rcreated_at_ts\x18\x03 \x01(\x03\"\x17\n\tIdRequest\x12\n\n\x02id\x18\x01 \x01(\x03\"*\n\rSearchRequest\x12\n\n\x02id\x18\x01 \x01(\x03\x12\r\n\x05\x63ount\x18\x02 \x01(\x05\"0\n\x0c\x46\x65tchRequest\x12 \n\x05items\x18\x01 \x03(\x0b\x32\x11.faiss.AddRequest\"\x1d\n\rImportRequest\x12\x0c\n\x04path\x18\x01 \x01(\t\" \n\rSimpleReponse\x12\x0f\n\x07message\x18\x01 \x01(\t\",\n\rSearchReponse\x12\x0b\n\x03ids\x18\x01 \x03(\x03\x12\x0e\n\x06scores\x18\x02 \x03(\x02\"\x07\n\x05\x45mpty\" \n\x11SimilarityRequest\x12\x0b\n\x03ids\x18\x01 \x03(\x03\"6\n\x11SimilarityReponse\x12\x12\n\nsimilarity\x18\x01 \x01(\x02\x12\r\n\x05\x63ount\x18\x02 \x01(\x05\"4\n\x10\x43lusterIdReponse\x12\x0b\n\x03ids\x18\x01 \x03(\x03\x12\x13\n\x0b\x63luster_ids\x18\x02 \x03(\x05\"@\n\x13TrainClusterRequest\x12\x12\n\nncentroids\x18\x01 \x01(\x05\x12\x15\n\rsave_filepath\x18\x02 \x01(\t2\xcd\x05\n\nImageIndex\x12\x30\n\x03\x41\x64\x64\x12\x11.faiss.AddRequest\x1a\x14.faiss.SimpleReponse\"\x00\x12\x32\n\x06Remove\x12\x10.faiss.IdRequest\x1a\x14.faiss.SimpleReponse\"\x00\x12\x36\n\x06Search\x12\x14.faiss.SearchRequest\x1a\x14.faiss.SearchReponse\"\x00\x12\x34\n\x05\x46\x65tch\x12\x13.faiss.FetchRequest\x1a\x14.faiss.SimpleReponse\"\x00\x12,\n\x04Info\x12\x0c.faiss.Empty\x1a\x14.faiss.SimpleReponse\"\x00\x12,\n\x04Save\x12\x0c.faiss.Empty\x1a\x14.faiss.SimpleReponse\"\x00\x12-\n\x05Train\x12\x0c.faiss.Empty\x1a\x14.faiss.SimpleReponse\"\x00\x12\x36\n\x06Import\x12\x14.faiss.ImportRequest\x1a\x14.faiss.SimpleReponse\"\x00\x12/\n\x07Migrate\x12\x0c.faiss.Empty\x1a\x14.faiss.SimpleReponse\"\x00\x12\x42\n\nSimilarity\x12\x18.faiss.SimilarityRequest\x1a\x18.faiss.SimilarityReponse\"\x00\x12@\n\tClusterId\x12\x18.faiss.SimilarityRequest\x1a\x17.faiss.ClusterIdReponse\"\x00\x12\x42\n\x0cTrainCluster\x12\x1a.faiss.TrainClusterRequest\x1a\x14.faiss.SimpleReponse\"\x00\x12-\n\x05Reset\x12\x0c.faiss.Empty\x1a\x14.faiss.SimpleReponse\"\x00\x62\x06proto3')
)




_ADDREQUEST = _descriptor.Descriptor(
  name='AddRequest',
  full_name='faiss.AddRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='faiss.AddRequest.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='url', full_name='faiss.AddRequest.url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='created_at_ts', full_name='faiss.AddRequest.created_at_ts', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=92,
)


_IDREQUEST = _descriptor.Descriptor(
  name='IdRequest',
  full_name='faiss.IdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='faiss.IdRequest.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=94,
  serialized_end=117,
)


_SEARCHREQUEST = _descriptor.Descriptor(
  name='SearchRequest',
  full_name='faiss.SearchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='faiss.SearchRequest.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='count', full_name='faiss.SearchRequest.count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=119,
  serialized_end=161,
)


_FETCHREQUEST = _descriptor.Descriptor(
  name='FetchRequest',
  full_name='faiss.FetchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='faiss.FetchRequest.items', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=163,
  serialized_end=211,
)


_IMPORTREQUEST = _descriptor.Descriptor(
  name='ImportRequest',
  full_name='faiss.ImportRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='faiss.ImportRequest.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=213,
  serialized_end=242,
)


_SIMPLEREPONSE = _descriptor.Descriptor(
  name='SimpleReponse',
  full_name='faiss.SimpleReponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='faiss.SimpleReponse.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=244,
  serialized_end=276,
)


_SEARCHREPONSE = _descriptor.Descriptor(
  name='SearchReponse',
  full_name='faiss.SearchReponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ids', full_name='faiss.SearchReponse.ids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scores', full_name='faiss.SearchReponse.scores', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=278,
  serialized_end=322,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='faiss.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=324,
  serialized_end=331,
)


_SIMILARITYREQUEST = _descriptor.Descriptor(
  name='SimilarityRequest',
  full_name='faiss.SimilarityRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ids', full_name='faiss.SimilarityRequest.ids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=333,
  serialized_end=365,
)


_SIMILARITYREPONSE = _descriptor.Descriptor(
  name='SimilarityReponse',
  full_name='faiss.SimilarityReponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='similarity', full_name='faiss.SimilarityReponse.similarity', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='count', full_name='faiss.SimilarityReponse.count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=367,
  serialized_end=421,
)


_CLUSTERIDREPONSE = _descriptor.Descriptor(
  name='ClusterIdReponse',
  full_name='faiss.ClusterIdReponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ids', full_name='faiss.ClusterIdReponse.ids', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_ids', full_name='faiss.ClusterIdReponse.cluster_ids', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=423,
  serialized_end=475,
)


_TRAINCLUSTERREQUEST = _descriptor.Descriptor(
  name='TrainClusterRequest',
  full_name='faiss.TrainClusterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ncentroids', full_name='faiss.TrainClusterRequest.ncentroids', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='save_filepath', full_name='faiss.TrainClusterRequest.save_filepath', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=477,
  serialized_end=541,
)

_FETCHREQUEST.fields_by_name['items'].message_type = _ADDREQUEST
DESCRIPTOR.message_types_by_name['AddRequest'] = _ADDREQUEST
DESCRIPTOR.message_types_by_name['IdRequest'] = _IDREQUEST
DESCRIPTOR.message_types_by_name['SearchRequest'] = _SEARCHREQUEST
DESCRIPTOR.message_types_by_name['FetchRequest'] = _FETCHREQUEST
DESCRIPTOR.message_types_by_name['ImportRequest'] = _IMPORTREQUEST
DESCRIPTOR.message_types_by_name['SimpleReponse'] = _SIMPLEREPONSE
DESCRIPTOR.message_types_by_name['SearchReponse'] = _SEARCHREPONSE
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['SimilarityRequest'] = _SIMILARITYREQUEST
DESCRIPTOR.message_types_by_name['SimilarityReponse'] = _SIMILARITYREPONSE
DESCRIPTOR.message_types_by_name['ClusterIdReponse'] = _CLUSTERIDREPONSE
DESCRIPTOR.message_types_by_name['TrainClusterRequest'] = _TRAINCLUSTERREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AddRequest = _reflection.GeneratedProtocolMessageType('AddRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDREQUEST,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.AddRequest)
  ))
_sym_db.RegisterMessage(AddRequest)

IdRequest = _reflection.GeneratedProtocolMessageType('IdRequest', (_message.Message,), dict(
  DESCRIPTOR = _IDREQUEST,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.IdRequest)
  ))
_sym_db.RegisterMessage(IdRequest)

SearchRequest = _reflection.GeneratedProtocolMessageType('SearchRequest', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHREQUEST,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.SearchRequest)
  ))
_sym_db.RegisterMessage(SearchRequest)

FetchRequest = _reflection.GeneratedProtocolMessageType('FetchRequest', (_message.Message,), dict(
  DESCRIPTOR = _FETCHREQUEST,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.FetchRequest)
  ))
_sym_db.RegisterMessage(FetchRequest)

ImportRequest = _reflection.GeneratedProtocolMessageType('ImportRequest', (_message.Message,), dict(
  DESCRIPTOR = _IMPORTREQUEST,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.ImportRequest)
  ))
_sym_db.RegisterMessage(ImportRequest)

SimpleReponse = _reflection.GeneratedProtocolMessageType('SimpleReponse', (_message.Message,), dict(
  DESCRIPTOR = _SIMPLEREPONSE,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.SimpleReponse)
  ))
_sym_db.RegisterMessage(SimpleReponse)

SearchReponse = _reflection.GeneratedProtocolMessageType('SearchReponse', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHREPONSE,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.SearchReponse)
  ))
_sym_db.RegisterMessage(SearchReponse)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.Empty)
  ))
_sym_db.RegisterMessage(Empty)

SimilarityRequest = _reflection.GeneratedProtocolMessageType('SimilarityRequest', (_message.Message,), dict(
  DESCRIPTOR = _SIMILARITYREQUEST,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.SimilarityRequest)
  ))
_sym_db.RegisterMessage(SimilarityRequest)

SimilarityReponse = _reflection.GeneratedProtocolMessageType('SimilarityReponse', (_message.Message,), dict(
  DESCRIPTOR = _SIMILARITYREPONSE,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.SimilarityReponse)
  ))
_sym_db.RegisterMessage(SimilarityReponse)

ClusterIdReponse = _reflection.GeneratedProtocolMessageType('ClusterIdReponse', (_message.Message,), dict(
  DESCRIPTOR = _CLUSTERIDREPONSE,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.ClusterIdReponse)
  ))
_sym_db.RegisterMessage(ClusterIdReponse)

TrainClusterRequest = _reflection.GeneratedProtocolMessageType('TrainClusterRequest', (_message.Message,), dict(
  DESCRIPTOR = _TRAINCLUSTERREQUEST,
  __module__ = 'faissimageindex_pb2'
  # @@protoc_insertion_point(class_scope:faiss.TrainClusterRequest)
  ))
_sym_db.RegisterMessage(TrainClusterRequest)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ImageIndexStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Add = channel.unary_unary(
          '/faiss.ImageIndex/Add',
          request_serializer=AddRequest.SerializeToString,
          response_deserializer=SimpleReponse.FromString,
          )
      self.Remove = channel.unary_unary(
          '/faiss.ImageIndex/Remove',
          request_serializer=IdRequest.SerializeToString,
          response_deserializer=SimpleReponse.FromString,
          )
      self.Search = channel.unary_unary(
          '/faiss.ImageIndex/Search',
          request_serializer=SearchRequest.SerializeToString,
          response_deserializer=SearchReponse.FromString,
          )
      self.Fetch = channel.unary_unary(
          '/faiss.ImageIndex/Fetch',
          request_serializer=FetchRequest.SerializeToString,
          response_deserializer=SimpleReponse.FromString,
          )
      self.Info = channel.unary_unary(
          '/faiss.ImageIndex/Info',
          request_serializer=Empty.SerializeToString,
          response_deserializer=SimpleReponse.FromString,
          )
      self.Save = channel.unary_unary(
          '/faiss.ImageIndex/Save',
          request_serializer=Empty.SerializeToString,
          response_deserializer=SimpleReponse.FromString,
          )
      self.Train = channel.unary_unary(
          '/faiss.ImageIndex/Train',
          request_serializer=Empty.SerializeToString,
          response_deserializer=SimpleReponse.FromString,
          )
      self.Import = channel.unary_unary(
          '/faiss.ImageIndex/Import',
          request_serializer=ImportRequest.SerializeToString,
          response_deserializer=SimpleReponse.FromString,
          )
      self.Migrate = channel.unary_unary(
          '/faiss.ImageIndex/Migrate',
          request_serializer=Empty.SerializeToString,
          response_deserializer=SimpleReponse.FromString,
          )
      self.Similarity = channel.unary_unary(
          '/faiss.ImageIndex/Similarity',
          request_serializer=SimilarityRequest.SerializeToString,
          response_deserializer=SimilarityReponse.FromString,
          )
      self.ClusterId = channel.unary_unary(
          '/faiss.ImageIndex/ClusterId',
          request_serializer=SimilarityRequest.SerializeToString,
          response_deserializer=ClusterIdReponse.FromString,
          )
      self.TrainCluster = channel.unary_unary(
          '/faiss.ImageIndex/TrainCluster',
          request_serializer=TrainClusterRequest.SerializeToString,
          response_deserializer=SimpleReponse.FromString,
          )
      self.Reset = channel.unary_unary(
          '/faiss.ImageIndex/Reset',
          request_serializer=Empty.SerializeToString,
          response_deserializer=SimpleReponse.FromString,
          )


  class ImageIndexServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def Add(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Remove(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Fetch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Info(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Save(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Train(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Import(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Migrate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Similarity(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ClusterId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def TrainCluster(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ImageIndexServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Add': grpc.unary_unary_rpc_method_handler(
            servicer.Add,
            request_deserializer=AddRequest.FromString,
            response_serializer=SimpleReponse.SerializeToString,
        ),
        'Remove': grpc.unary_unary_rpc_method_handler(
            servicer.Remove,
            request_deserializer=IdRequest.FromString,
            response_serializer=SimpleReponse.SerializeToString,
        ),
        'Search': grpc.unary_unary_rpc_method_handler(
            servicer.Search,
            request_deserializer=SearchRequest.FromString,
            response_serializer=SearchReponse.SerializeToString,
        ),
        'Fetch': grpc.unary_unary_rpc_method_handler(
            servicer.Fetch,
            request_deserializer=FetchRequest.FromString,
            response_serializer=SimpleReponse.SerializeToString,
        ),
        'Info': grpc.unary_unary_rpc_method_handler(
            servicer.Info,
            request_deserializer=Empty.FromString,
            response_serializer=SimpleReponse.SerializeToString,
        ),
        'Save': grpc.unary_unary_rpc_method_handler(
            servicer.Save,
            request_deserializer=Empty.FromString,
            response_serializer=SimpleReponse.SerializeToString,
        ),
        'Train': grpc.unary_unary_rpc_method_handler(
            servicer.Train,
            request_deserializer=Empty.FromString,
            response_serializer=SimpleReponse.SerializeToString,
        ),
        'Import': grpc.unary_unary_rpc_method_handler(
            servicer.Import,
            request_deserializer=ImportRequest.FromString,
            response_serializer=SimpleReponse.SerializeToString,
        ),
        'Migrate': grpc.unary_unary_rpc_method_handler(
            servicer.Migrate,
            request_deserializer=Empty.FromString,
            response_serializer=SimpleReponse.SerializeToString,
        ),
        'Similarity': grpc.unary_unary_rpc_method_handler(
            servicer.Similarity,
            request_deserializer=SimilarityRequest.FromString,
            response_serializer=SimilarityReponse.SerializeToString,
        ),
        'ClusterId': grpc.unary_unary_rpc_method_handler(
            servicer.ClusterId,
            request_deserializer=SimilarityRequest.FromString,
            response_serializer=ClusterIdReponse.SerializeToString,
        ),
        'TrainCluster': grpc.unary_unary_rpc_method_handler(
            servicer.TrainCluster,
            request_deserializer=TrainClusterRequest.FromString,
            response_serializer=SimpleReponse.SerializeToString,
        ),
        'Reset': grpc.unary_unary_rpc_method_handler(
            servicer.Reset,
            request_deserializer=Empty.FromString,
            response_serializer=SimpleReponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'faiss.ImageIndex', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaImageIndexServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def Add(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Remove(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Search(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Fetch(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Info(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Save(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Train(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Import(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Migrate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Similarity(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ClusterId(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def TrainCluster(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Reset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaImageIndexStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def Add(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Add.future = None
    def Remove(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Remove.future = None
    def Search(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Search.future = None
    def Fetch(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Fetch.future = None
    def Info(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Info.future = None
    def Save(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Save.future = None
    def Train(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Train.future = None
    def Import(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Import.future = None
    def Migrate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Migrate.future = None
    def Similarity(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Similarity.future = None
    def ClusterId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ClusterId.future = None
    def TrainCluster(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    TrainCluster.future = None
    def Reset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Reset.future = None


  def beta_create_ImageIndex_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('faiss.ImageIndex', 'Add'): AddRequest.FromString,
      ('faiss.ImageIndex', 'ClusterId'): SimilarityRequest.FromString,
      ('faiss.ImageIndex', 'Fetch'): FetchRequest.FromString,
      ('faiss.ImageIndex', 'Import'): ImportRequest.FromString,
      ('faiss.ImageIndex', 'Info'): Empty.FromString,
      ('faiss.ImageIndex', 'Migrate'): Empty.FromString,
      ('faiss.ImageIndex', 'Remove'): IdRequest.FromString,
      ('faiss.ImageIndex', 'Reset'): Empty.FromString,
      ('faiss.ImageIndex', 'Save'): Empty.FromString,
      ('faiss.ImageIndex', 'Search'): SearchRequest.FromString,
      ('faiss.ImageIndex', 'Similarity'): SimilarityRequest.FromString,
      ('faiss.ImageIndex', 'Train'): Empty.FromString,
      ('faiss.ImageIndex', 'TrainCluster'): TrainClusterRequest.FromString,
    }
    response_serializers = {
      ('faiss.ImageIndex', 'Add'): SimpleReponse.SerializeToString,
      ('faiss.ImageIndex', 'ClusterId'): ClusterIdReponse.SerializeToString,
      ('faiss.ImageIndex', 'Fetch'): SimpleReponse.SerializeToString,
      ('faiss.ImageIndex', 'Import'): SimpleReponse.SerializeToString,
      ('faiss.ImageIndex', 'Info'): SimpleReponse.SerializeToString,
      ('faiss.ImageIndex', 'Migrate'): SimpleReponse.SerializeToString,
      ('faiss.ImageIndex', 'Remove'): SimpleReponse.SerializeToString,
      ('faiss.ImageIndex', 'Reset'): SimpleReponse.SerializeToString,
      ('faiss.ImageIndex', 'Save'): SimpleReponse.SerializeToString,
      ('faiss.ImageIndex', 'Search'): SearchReponse.SerializeToString,
      ('faiss.ImageIndex', 'Similarity'): SimilarityReponse.SerializeToString,
      ('faiss.ImageIndex', 'Train'): SimpleReponse.SerializeToString,
      ('faiss.ImageIndex', 'TrainCluster'): SimpleReponse.SerializeToString,
    }
    method_implementations = {
      ('faiss.ImageIndex', 'Add'): face_utilities.unary_unary_inline(servicer.Add),
      ('faiss.ImageIndex', 'ClusterId'): face_utilities.unary_unary_inline(servicer.ClusterId),
      ('faiss.ImageIndex', 'Fetch'): face_utilities.unary_unary_inline(servicer.Fetch),
      ('faiss.ImageIndex', 'Import'): face_utilities.unary_unary_inline(servicer.Import),
      ('faiss.ImageIndex', 'Info'): face_utilities.unary_unary_inline(servicer.Info),
      ('faiss.ImageIndex', 'Migrate'): face_utilities.unary_unary_inline(servicer.Migrate),
      ('faiss.ImageIndex', 'Remove'): face_utilities.unary_unary_inline(servicer.Remove),
      ('faiss.ImageIndex', 'Reset'): face_utilities.unary_unary_inline(servicer.Reset),
      ('faiss.ImageIndex', 'Save'): face_utilities.unary_unary_inline(servicer.Save),
      ('faiss.ImageIndex', 'Search'): face_utilities.unary_unary_inline(servicer.Search),
      ('faiss.ImageIndex', 'Similarity'): face_utilities.unary_unary_inline(servicer.Similarity),
      ('faiss.ImageIndex', 'Train'): face_utilities.unary_unary_inline(servicer.Train),
      ('faiss.ImageIndex', 'TrainCluster'): face_utilities.unary_unary_inline(servicer.TrainCluster),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ImageIndex_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('faiss.ImageIndex', 'Add'): AddRequest.SerializeToString,
      ('faiss.ImageIndex', 'ClusterId'): SimilarityRequest.SerializeToString,
      ('faiss.ImageIndex', 'Fetch'): FetchRequest.SerializeToString,
      ('faiss.ImageIndex', 'Import'): ImportRequest.SerializeToString,
      ('faiss.ImageIndex', 'Info'): Empty.SerializeToString,
      ('faiss.ImageIndex', 'Migrate'): Empty.SerializeToString,
      ('faiss.ImageIndex', 'Remove'): IdRequest.SerializeToString,
      ('faiss.ImageIndex', 'Reset'): Empty.SerializeToString,
      ('faiss.ImageIndex', 'Save'): Empty.SerializeToString,
      ('faiss.ImageIndex', 'Search'): SearchRequest.SerializeToString,
      ('faiss.ImageIndex', 'Similarity'): SimilarityRequest.SerializeToString,
      ('faiss.ImageIndex', 'Train'): Empty.SerializeToString,
      ('faiss.ImageIndex', 'TrainCluster'): TrainClusterRequest.SerializeToString,
    }
    response_deserializers = {
      ('faiss.ImageIndex', 'Add'): SimpleReponse.FromString,
      ('faiss.ImageIndex', 'ClusterId'): ClusterIdReponse.FromString,
      ('faiss.ImageIndex', 'Fetch'): SimpleReponse.FromString,
      ('faiss.ImageIndex', 'Import'): SimpleReponse.FromString,
      ('faiss.ImageIndex', 'Info'): SimpleReponse.FromString,
      ('faiss.ImageIndex', 'Migrate'): SimpleReponse.FromString,
      ('faiss.ImageIndex', 'Remove'): SimpleReponse.FromString,
      ('faiss.ImageIndex', 'Reset'): SimpleReponse.FromString,
      ('faiss.ImageIndex', 'Save'): SimpleReponse.FromString,
      ('faiss.ImageIndex', 'Search'): SearchReponse.FromString,
      ('faiss.ImageIndex', 'Similarity'): SimilarityReponse.FromString,
      ('faiss.ImageIndex', 'Train'): SimpleReponse.FromString,
      ('faiss.ImageIndex', 'TrainCluster'): SimpleReponse.FromString,
    }
    cardinalities = {
      'Add': cardinality.Cardinality.UNARY_UNARY,
      'ClusterId': cardinality.Cardinality.UNARY_UNARY,
      'Fetch': cardinality.Cardinality.UNARY_UNARY,
      'Import': cardinality.Cardinality.UNARY_UNARY,
      'Info': cardinality.Cardinality.UNARY_UNARY,
      'Migrate': cardinality.Cardinality.UNARY_UNARY,
      'Remove': cardinality.Cardinality.UNARY_UNARY,
      'Reset': cardinality.Cardinality.UNARY_UNARY,
      'Save': cardinality.Cardinality.UNARY_UNARY,
      'Search': cardinality.Cardinality.UNARY_UNARY,
      'Similarity': cardinality.Cardinality.UNARY_UNARY,
      'Train': cardinality.Cardinality.UNARY_UNARY,
      'TrainCluster': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'faiss.ImageIndex', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
